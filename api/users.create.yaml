operation:
  summary: Crea un Usuario
  operationId: users.create
  tags:
    - Users
  description: |
    Cada usuario final es representado por un usuario único de sistema.
    En esta API es posible crear dicho usuario en el sistema para que pueda recibir y firmar documentos.
    Cada documento debe ser firmado por un usuari existente en la plataforma.
    Es a los usuarios finalmente a quienes les llegan los documentos que se encuentran pendientes de firma.
    Cada usuarios puede pertenecer a mas de una empresa, esta vinculación se puede hacer con la API
    `/organizations/{organitzationID}/users/{usuarioID}`

  parameters:
    - $ref: '../api/components/parameters/header.token.yaml#/parameter'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - surname
            - apMaterno
            - email
            - identity_document
            - type_identity_document
            - serie_identity_document
            - password
            - address
            - gender
            - birth
            - phone
          properties:
            name:
                description: Indica el nombre del usuario a crear
                 <br> Ejemplo = `Ramon`
                example: 'Ramon'
                type: string
            surname:
                type: string
                description: Indica el apellido paterno del usuario a crear.
                  <br> Ejemplo = `Montalva`
                example: 'Montalva'
            apMaterno:
              type: string
              description: Indica el apellido materno del usuario a crear.
                <br> Ejemplo = `Montoya`
              example: 'Montoya'
            email:
                type: string
                description: Indica el email del usuario a crear.
                  <br> Ejemplo = `tucorreo@empresa.cl`
                example: 'tucorreo@empresa.cl'
            identity_document:
                type: string
                description: Indica el rut del documento del usuario a crear.
                  <br> Ejemplo = `12345678-9`
                example: '12345678-9'
            type_identity_document:
                type: string
                description: Indica el tipo documento del usuario a crear
                  <br> Ejemplo = `CEDULA_EXT`
                example: 'CEDULA_EXT'
            serie_identity_document:
                type: string
                description: Indica el rut del documento del usuario a crear.
                  <br> Ejemplo = `12345678-9`
                example: '12345678-9'
            password:
                type: string
                description: Indica la password del usuario a crear.
                  <br> Ejemplo = `a1da64b9-48af-43ce-a4d3-25fd9e3c5c5b`
                example: 'a1da64b9-48af-43ce-a4d3-25fd9e3c5c5b'
            address:
                type: string
                description: Indica la direccion del usuario a crear
                 <br> Ejemplo = `Mi Casa 123`
                example: 'Mi Casa 123'
            gender:
                type: string
                enum:
                  - "male"
                  - "female"
                description: Indica el genero del usuario a crear.
                  <br> Ejemplo = `male`
                example: 'male'
            birth:
                type: string
                description: Indica la fecha de nacimiento del usuario a crear.
                  <br> Ejemplo = `1970-12-31 (Format yyyy-MM-dd)`
                example: '1970-12-31'
            phone:
                type: string
                description: Indica el numero de telefono del usuario a crear.
                  <br> Ejemplo = `55555555`
                example: '55555555'
  responses:
    "200":
      description: Respuesta a todo evento
      content:
        application/json:
          schema:
            type: object
          examples:
            Respuesta OK:
              value:
                status: "success"
                message: "El usuario ha sido registrado"