openapi: 3.0.0
info:
  title: API E-Digital
  description: |
    API de firmado para E-Digital
  version: v1.2
  contact:
    name: Carlos Garcia
    email: carlos.garcia@e-digital.cl
    url: www.e-digital.cl
  x-logo:
    url: >-
      https://e-digital.cl/wp-content/uploads/2016/11/logo_final_2_slogan_menor2.png
    altText: E-Digital
servers:
  - url: 'https://e-digital.cl/api'
paths:
  /auth:
    post:
      summary: Obtener token de autenticación
      operationId: auth
      tags:
        - Security
      description: >
        Retorna un token de autenticación para consumir el resto de los
        endpoint.
      responses:
        '200':
          description: Respuesta a todo evento
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: Token de autenticación
              examples:
                Respuesta OK:
                  value:
                    token: ASDFGHJKLQWERTYUIO
      x-code-samples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://e-digital.cl/api/auth
        - lang: Java + Okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://e-digital.cl/api/auth")
              .post(null)
              .build();

            Response response = client.newCall(request).execute();
        - lang: Csharp + Restsharp
          source: |-
            var client = new RestClient("https://e-digital.cl/api/auth");
            var request = new RestRequest(Method.POST);
            IRestResponse response = client.Execute(request);
        - lang: Javascript + Jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://e-digital.cl/api/auth",
              "method": "POST",
              "headers": {}
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Node + Native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "e-digital.cl",
              "port": null,
              "path": "/api/auth",
              "headers": {}
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Php + Curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://e-digital.cl/api/auth",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("e-digital.cl")

            conn.request("POST", "/api/auth")

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
  /users:
    post:
      summary: Crea un Usuario
      operationId: users.create
      tags:
        - Users
      description: >
        Cada usuario final es representado por un usuario único de sistema.

        En esta API es posible crear dicho usuario en el sistema para que pueda
        recibir y firmar documentos.

        Cada documento debe ser firmado por un usuari existente en la
        plataforma.

        Es a los usuarios finalmente a quienes les llegan los documentos que se
        encuentran pendientes de firma.

        Cada usuarios puede pertenecer a mas de una empresa, esta vinculación se
        puede hacer con la API

        `/organizations/{organitzationID}/users/{usuarioID}`
      parameters:
        - &ref_0
          name: token
          in: header
          description: >-
            Token de acceso que permite el consumo de los EndPoint el cual se
            puede obtener en la API `/auth`.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - surName
                - middleName
                - email
                - identityDocument
                - typeIdentityDocument
                - serieIdentityDocument
                - password
                - address
                - gender
                - birth
                - phone
              properties:
                name:
                  description: 'Indica el nombre del usuario a crear <br> Ejemplo : `Ramon` '
                  example: Ramon
                  type: string
                surName:
                  type: string
                  description: >-
                    Indica el apellido paterno del usuario a crear. <br> Ejemplo
                    : `Montalva` 
                  example: Montalva
                middleName:
                  type: string
                  description: >-
                    Indica el apellido materno del usuario a crear. <br> Ejemplo
                    : `Montoya` 
                  example: Montoya
                email:
                  type: string
                  description: >-
                    Indica el email del usuario a crear. <br> Ejemplo :
                    `tucorreo@empresa.cl` 
                  example: tucorreo@empresa.cl
                identityDocument:
                  type: string
                  description: >-
                    Indica el rut del documento del usuario a crear. <br>
                    Ejemplo : `12345678-9` 
                  example: 12345678-9
                typeIdentityDocument:
                  type: string
                  description: >-
                    Indica el tipo documento del usuario a crear <br> Ejemplo :
                    `CEDULA_EXT` 
                  example: CEDULA_EXT
                serieIdentityDocument:
                  type: string
                  description: >-
                    Indica el rut del documento del usuario a crear. <br>
                    Ejemplo : `12345678-9` 
                  example: 12345678-9
                password:
                  type: string
                  description: >-
                    Indica la password del usuario a crear. <br> Ejemplo :
                    `myS3cretPass` 
                  example: myS3cretPass
                address:
                  type: string
                  description: >-
                    Indica la dirección del usuario a crear <br> Ejemplo :
                    `Badajoz 100 – Piso 15 (Oficina 1519), Las Condes` 
                  example: 'Badajoz 100 – Piso 15 (Oficina 1519), Las Condes'
                gender:
                  type: string
                  enum:
                    - male
                    - female
                  description: 'Indica el genero del usuario a crear. <br> Ejemplo : `male` '
                  example: male
                birth:
                  type: string
                  description: >-
                    Indica la fecha de nacimiento del usuario a crear `(Format
                    yyyy-MM-dd)` <br> Ejemplo : `1970-12-31` 
                  example: '1970-12-31'
                phone:
                  type: string
                  description: >-
                    Indica el número de teléfono del usuario a crear. <br>
                    Ejemplo : `(2) 2219 8406` 
                  example: (2) 2219 8406
      responses:
        '200':
          description: Respuesta a todo evento
          content:
            application/json:
              schema:
                type: object
              examples:
                Respuesta OK:
                  value:
                    status: success
                    message: El usuario ha sido registrado
      x-code-samples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://e-digital.cl/api/users \
              --header 'content-type: application/json' \
              --header 'token: SOME_STRING_VALUE' \
              --data '{"name":"Ramon","surName":"Montalva","middleName":"Montoya","email":"tucorreo@empresa.cl","identityDocument":"12345678-9","typeIdentityDocument":"CEDULA_EXT","serieIdentityDocument":"12345678-9","password":"myS3cretPass","address":"Badajoz 100 – Piso 15 (Oficina 1519), Las Condes","gender":"male","birth":"1970-12-31","phone":"(2) 2219 8406"}'
        - lang: Java + Okhttp
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"name\":\"Ramon\",\"surName\":\"Montalva\",\"middleName\":\"Montoya\",\"email\":\"tucorreo@empresa.cl\",\"identityDocument\":\"12345678-9\",\"typeIdentityDocument\":\"CEDULA_EXT\",\"serieIdentityDocument\":\"12345678-9\",\"password\":\"myS3cretPass\",\"address\":\"Badajoz
            100 – Piso 15 (Oficina 1519), Las
            Condes\",\"gender\":\"male\",\"birth\":\"1970-12-31\",\"phone\":\"(2)
            2219 8406\"}");

            Request request = new Request.Builder()
              .url("https://e-digital.cl/api/users")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("token", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Csharp + Restsharp
          source: >-
            var client = new RestClient("https://e-digital.cl/api/users");

            var request = new RestRequest(Method.POST);

            request.AddHeader("content-type", "application/json");

            request.AddHeader("token", "SOME_STRING_VALUE");

            request.AddParameter("application/json",
            "{\"name\":\"Ramon\",\"surName\":\"Montalva\",\"middleName\":\"Montoya\",\"email\":\"tucorreo@empresa.cl\",\"identityDocument\":\"12345678-9\",\"typeIdentityDocument\":\"CEDULA_EXT\",\"serieIdentityDocument\":\"12345678-9\",\"password\":\"myS3cretPass\",\"address\":\"Badajoz
            100 – Piso 15 (Oficina 1519), Las
            Condes\",\"gender\":\"male\",\"birth\":\"1970-12-31\",\"phone\":\"(2)
            2219 8406\"}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Javascript + Jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://e-digital.cl/api/users",
              "method": "POST",
              "headers": {
                "content-type": "application/json",
                "token": "SOME_STRING_VALUE"
              },
              "processData": false,
              "data": "{\"name\":\"Ramon\",\"surName\":\"Montalva\",\"middleName\":\"Montoya\",\"email\":\"tucorreo@empresa.cl\",\"identityDocument\":\"12345678-9\",\"typeIdentityDocument\":\"CEDULA_EXT\",\"serieIdentityDocument\":\"12345678-9\",\"password\":\"myS3cretPass\",\"address\":\"Badajoz 100 – Piso 15 (Oficina 1519), Las Condes\",\"gender\":\"male\",\"birth\":\"1970-12-31\",\"phone\":\"(2) 2219 8406\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Node + Native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "e-digital.cl",
              "port": null,
              "path": "/api/users",
              "headers": {
                "content-type": "application/json",
                "token": "SOME_STRING_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              name: 'Ramon',
              surName: 'Montalva',
              middleName: 'Montoya',
              email: 'tucorreo@empresa.cl',
              identityDocument: '12345678-9',
              typeIdentityDocument: 'CEDULA_EXT',
              serieIdentityDocument: '12345678-9',
              password: 'myS3cretPass',
              address: 'Badajoz 100 – Piso 15 (Oficina 1519), Las Condes',
              gender: 'male',
              birth: '1970-12-31',
              phone: '(2) 2219 8406'
            }));
            req.end();
        - lang: Php + Curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://e-digital.cl/api/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"name\":\"Ramon\",\"surName\":\"Montalva\",\"middleName\":\"Montoya\",\"email\":\"tucorreo@empresa.cl\",\"identityDocument\":\"12345678-9\",\"typeIdentityDocument\":\"CEDULA_EXT\",\"serieIdentityDocument\":\"12345678-9\",\"password\":\"myS3cretPass\",\"address\":\"Badajoz 100 – Piso 15 (Oficina 1519), Las Condes\",\"gender\":\"male\",\"birth\":\"1970-12-31\",\"phone\":\"(2) 2219 8406\"}",
              CURLOPT_HTTPHEADER => array(
                "content-type: application/json",
                "token: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python + Python3
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("e-digital.cl")


            payload =
            "{\"name\":\"Ramon\",\"surName\":\"Montalva\",\"middleName\":\"Montoya\",\"email\":\"tucorreo@empresa.cl\",\"identityDocument\":\"12345678-9\",\"typeIdentityDocument\":\"CEDULA_EXT\",\"serieIdentityDocument\":\"12345678-9\",\"password\":\"myS3cretPass\",\"address\":\"Badajoz
            100 – Piso 15 (Oficina 1519), Las
            Condes\",\"gender\":\"male\",\"birth\":\"1970-12-31\",\"phone\":\"(2)
            2219 8406\"}"


            headers = {
                'content-type': "application/json",
                'token': "SOME_STRING_VALUE"
                }

            conn.request("POST", "/api/users", payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
  '/users/{userID}':
    get:
      summary: Obtiene informacion de un usuario según su ID
      operationId: users.info
      tags:
        - Users
      description: |
        EndPoint que permite obtener la información de un usuario según su ID.
      parameters:
        - *ref_0
        - name: userID
          in: path
          description: Identificador del Usuario
          required: true
          example: 10009
          schema:
            type: number
      responses:
        '200':
          description: Respuesta a todo evento
          content:
            application/json:
              schema:
                type: object
              examples:
                Respuesta OK:
                  value:
                    status: success
                    message: El usuario ha sido registrado
      x-code-samples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://e-digital.cl/api/users/%7BuserID%7D \
              --header 'token: SOME_STRING_VALUE'
        - lang: Java + Okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://e-digital.cl/api/users/%7BuserID%7D")
              .get()
              .addHeader("token", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Csharp + Restsharp
          source: >-
            var client = new
            RestClient("https://e-digital.cl/api/users/%7BuserID%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("token", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Javascript + Jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://e-digital.cl/api/users/%7BuserID%7D",
              "method": "GET",
              "headers": {
                "token": "SOME_STRING_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Node + Native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "e-digital.cl",
              "port": null,
              "path": "/api/users/%7BuserID%7D",
              "headers": {
                "token": "SOME_STRING_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Php + Curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://e-digital.cl/api/users/%7BuserID%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "token: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("e-digital.cl")

            headers = { 'token': "SOME_STRING_VALUE" }

            conn.request("GET", "/api/users/%7BuserID%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
tags:
  - name: Security
    description: Mecanismos de seguridad
  - name: Users
    description: Conjunto de API's que permiten la administración de los usuarios.
  - name: Organization
    description: Descripcion Documentos
  - name: Documents
    description: Descripcion Documentos
